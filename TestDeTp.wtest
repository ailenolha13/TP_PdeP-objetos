import TpObjetos.*

describe "Tests de gandalf" {
  test "Poder de Gandalf con toda la vida y todas sus armas" {
    gandalf.vida(100)
    assert.equals(2800, gandalf.poder())
  }
  test "Poder de Gandalf sin armas y con 80 de vida" {
    gandalf.sacarArma(baston)
    gandalf.sacarArma(espada)
    gandalf.vida(80)
    assert.equals(1200, gandalf.poder())
  }
  test "Poder de Gandalf con 5 de vida y su báculo" {
    gandalf.sacarArma(espada)
    gandalf.vida(5)
    assert.equals(2300, gandalf.poder())
  }
  test "Poder de Gandalf con 30 de vida, su báculo y su espada pero versión enana" {
    espada.origen("enano")
    gandalf.vida(30)
    assert.equals(1650, gandalf.poder())
  }
}

//Tests de Zonas y Caminos
describe "Tests de zonas y caminos" {
  test "gandalf full vida y con sus armas, puede atravesar Lebennin" {
    gandalf.agregarArma(baston)
    gandalf.agregarArma(espada)
    gandalf.vida(100)
    assert.equals(true, lebennin.atravesarZona(gandalf))
  }
  test "gandalf sin armas y con 11 de vida, puede atravesar Lebennin" {
    gandalf.sacarArma(baston)
    gandalf.sacarArma(espada)
    gandalf.vida(11)
    assert.equals(false, lebennin.atravesarZona(gandalf))
  }
  test "gandalf sin armas y con 11 de vida, puede atravesar Minas Tirith" {
    gandalf.sacarArma(baston)
    gandalf.sacarArma(espada)
    gandalf.vida(11)
    assert.equals(false, minasTirith.atravesarZona(gandalf))
  }
  test "Gandalf full vida y con sus armas, puede atravesar camino compuesto Lebennin-Minas Tirith" {
    gandalf.agregarArma(baston)
    gandalf.agregarArma(espada)
    gandalf.vida(100)
    gondor.definirCamino(lebennin, minasTirith)
    assert.equals(true, gondor.puedeAtravesarZonas(gandalf))
  }
  test "Gandalf full vida y con sus armas, atraviesa el camino compuesto por Lebennin y Minas Tirith" {
    gandalf.agregarArma(baston)
    gandalf.agregarArma(espada)
    gandalf.vida(90)
    gondor.definirCamino(lebennin, minasTirith)
    gondor.recorrerCamino(gandalf)
    assert.equals(90, gandalf.vida)
  }
}

// Tests de Tom:
describe "Tests de Tom Bombadil" {
  test "Tom puede atravesar Lebennin" {
    assert.equals(true, tomBombadil.atravesarZona(lebennin))
  }
}